{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComic","getComic","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","title","pages","pageCount","language","textObjects","prices","price","ErrorBoundary","state","errorInfo","console","log","this","setState","props","children","Component","AppBanner","className","avengers","avengersLogo","ComicsList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","useEffect","onRequest","window","addEventListener","onScroll","removeEventListener","initial","then","onCharListLoaded","pageYOffset","document","documentElement","clientHeight","scrollHeight","newCharList","ended","length","arr","item","i","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage"],"mappings":"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","file":"static/js/4.d1c3e246.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\n    );\n}\n\nexport default ErrorMessage;","import { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n    const [loading, setLoading] = useState(false),\n          [error, setError] = useState(null),\n          request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n            setLoading(true);\n\n            try {\n                const response = await fetch(url, {method, body, headers});\n\n                if (!response.ok) {\n                    throw new Error(`Could not fetch ${url}, status ${response.status}`);\n                }\n\n                const data = await response.json();\n\n                setLoading(false);\n\n                return data;\n            } catch (err) {\n                setLoading(false);\n                setError(err.message);\n                throw err;\n            }\n          }, []);\n\n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, error, request, clearError};\n};\n\nexport default useHttp;","import useHttp from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, error, request, clearError} = useHttp(),\n          _apiBase = 'https://gateway.marvel.com:443/v1/public/',\n          _apiKey = 'apikey=5c02a0353f46ffbe06fcfc4be6d97d44',\n          _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComic);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComic(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        };\n    }\n\n    const _transformComic = (comic) => {\n        return {\n            id: comic.id,\n            title: comic.title,\n            description: comic.description,\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\n            pages: comic.pageCount,\n            language: comic.textObjects[0] ? comic.textObjects[0].language : null,\n            prices: comic.prices.price\n        }\n    }\n\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic};\n} \n\nexport default useMarvelService;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({error: true});\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [charList, setCharList] = useState([]),\n          [newItemLoading, setNewItemLoading] = useState(false),\n          [offset, setOffset] = useState(0),\n          [charEnded, setCharEnded] = useState(false),\n          {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n    \n    useEffect(() => {\n        if(!charEnded && !newItemLoading) {\n            window.addEventListener('scroll', onScroll);\n        }\n\n        return () => window.removeEventListener('scroll', onScroll);\n    })\n    \n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset).then(onCharListLoaded);\n    }\n    \n    const onScroll = useCallback(() => {\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            onRequest(offset, false);\n        }\n    })\n    \n    const onCharListLoaded = (newCharList) => {\n        let ended = false; \n        if (newCharList.length < 8) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]); \n        setNewItemLoading(false); \n        setOffset(offset => offset + newCharList.length); \n        setCharEnded(ended); \n    }\n    \n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            // item.thumbnail = item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif' ? 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' : item.thumbnail;\n            \n            return (\n                <li \n                className=\"comics__item\"\n                key={item.id}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n    \n            return (\n                <ul className=\"comics__grid\">\n                    {items}\n                </ul>\n            )\n        }\n    \n    const items = renderItems(charList),\n          errorMessage = error ? <ErrorMessage/> : null,\n          spinner = loading && !newItemLoading ? <Spinner/> : null;\n    \n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ErrorBoundary>\n                <ComicsList/>\n            </ErrorBoundary>\n        </>\n    );\n}\n\nexport default ComicsPage;"],"sourceRoot":""}