{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","AppHeader","className","href","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","MarvelService","_apiBase","_apiKey","_baseOffset","getRecource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","loading","marvelService","onCharLoaded","onCharLoading","onError","updateChar","Math","floor","random","then","catch","errorMessage","spinner","content","onClick","mjolnir","View","length","slice","clazz","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoaded","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","newCharList","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","addEventListener","removeEventListener","arr","i","imgStyle","tabIndex","onSelectedChar","onKeyDown","e","key","renderItems","Skeleton","CharInfo","charId","prevProps","skeleton","resourceURI","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20c9ca65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\n    );\n}\n\nexport default ErrorMessage;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({error: true});\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=5c02a0353f46ffbe06fcfc4be6d97d44';\n    _baseOffset = 210;\n\n    getRecource = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getRecource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getRecource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        };\n    }\n} \n\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from './../../services/MarvelService'\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false});\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true});\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true});\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        if (!this.state.error) {\n            this.onCharLoading();\n        } else {\n            this.setState({error: false});\n        }\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state,\n              errorMessage = error ? <ErrorMessage/> : null,\n              spinner = loading ? <Spinner/> : null,\n              content = !(error || loading) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst View = ({char}) => {\n    const {name, homepage, wiki} = char;\n    let {description, thumbnail} = char;\n    if (description.length === 0) {\n        description = 'No description';\n    } else if (description.length > 30) {\n        description = description.slice(0, 200) + '...';\n    }\n    let clazz = 'randomchar__img';\n    thumbnail = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif' ? 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' : thumbnail;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') clazz = 'randomchar__not_img';\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={clazz}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 1540,\n        charEnded: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n        window.addEventListener('scroll', this.onScroll, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.onScroll, false);\n    }\n\n    onRequest = (offset) => {\n        this.onCharLoading();\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onScroll = () => {\n        console.log('2798r')\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 200 && !this.state.newItemLoading) this.onRequest(this.state.offset);\n    }\n\n    onCharLoading = () => {\n        this.setState({newItemLoading: true});\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + newCharList.length,\n            charEnded: ended\n        }));\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            item.thumbnail = item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif' ? 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' : item.thumbnail;\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                className='char__item'\n                tabIndex={0}\n                ref={this.setRef}\n                key={item.id}\n                onClick={() => {\n                    this.props.onSelectedChar(item.id);\n                    this.focusOnItem(i);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === ' ' || e.key === \"Enter\") {\n                        this.props.onSelectedChar(item.id);\n                        this.focusOnItem(i);\n                    }\n                }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const {charList, loading, error} = this.state,\n              items = this.renderItems(charList),\n              errorMessage = error ? <ErrorMessage/> : null,\n              spinner = loading ? <Spinner/> : null,\n              content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onSelectedChar: PropTypes.func\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false});\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true});\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true});\n    }\n\n    render() {\n        const {char, loading, error} = this.state,\n              skeleton = char || error || loading ? null : <Skeleton/>,\n              errorMessage = error ? <ErrorMessage/> : null,\n              spinner = loading ? <Spinner/> : null,\n              content = !(error || loading || !char) ? <View char={char}/> : null;\n              \n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, homepage, wiki, comics} = char;\n    let {thumbnail} = char;\n    let clazz = 'randomchar__img';\n    thumbnail = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif' ? 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' : thumbnail;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif') clazz = 'char__not_img';\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} className={clazz}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    // eslint-disable-next-line\n                    comics.map((item, i) => {\n                        if (i < 10) {\n                            return (\n                                <li className=\"char__comics-item\" key={i}>\n                                    <a href={item.resourceURI}>{item.name}</a>\n                                </li>\n                            );\n                        }\n                    })\n                }\n            </ul>\n        </>\n    );\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.b6739a8d.png\";","import { Component } from \"react\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onSelectedChar = (id) => {\n        this.setState({selectedChar: id})\n    }\n\n    render () {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onSelectedChar={this.onSelectedChar}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}