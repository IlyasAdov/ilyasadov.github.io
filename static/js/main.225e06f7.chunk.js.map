{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","AppHeader","className","href","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","MarvelService","_apiBase","_apiKey","_baseOffset","getRecource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","View","length","slice","clazz","RandomChar","useState","setChar","loading","setLoading","setError","marvelService","useEffect","updateChar","onCharLoaded","onError","Math","floor","random","then","catch","errorMessage","spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","window","addEventListener","onScroll","removeEventListener","onCharLoading","onCharListLoaded","useCallback","pageYOffset","document","documentElement","clientHeight","scrollHeight","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onSelectedChar","onKeyDown","e","key","renderItems","disabled","Skeleton","resourceURI","CharInfo","charId","skeleton","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.225e06f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\n    );\n}\n\nexport default ErrorMessage;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({error: true});\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=5c02a0353f46ffbe06fcfc4be6d97d44';\n    _baseOffset = 210;\n\n    getRecource = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getRecource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getRecource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        };\n    }\n} \n\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.1f86f2d3.png\";","import { useState, useEffect } from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from './../../services/MarvelService'\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({}),\n          [loading, setLoading] = useState(true),\n          [error, setError] = useState(false),\n          marvelService = new MarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n        setLoading(false);\n    }\n\n    const onCharLoading = () => {\n        setLoading(true);\n    }\n\n    const onError = () => {\n        setLoading(false);\n        setError(true);\n    }\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        if (!error) {\n            onCharLoading();\n        } else {\n            setError(false);\n        }\n        marvelService\n            .getCharacter(id)\n            .then(onCharLoaded)\n            .catch(onError);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null,\n          spinner = loading ? <Spinner/> : null,\n          content = !(error || loading) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    );\n}\n\nconst View = ({char}) => {\n    const {name, homepage, wiki} = char;\n    let {description, thumbnail} = char;\n    if (description.length === 0) {\n        description = 'No description';\n    } else if (description.length > 30) {\n        description = description.slice(0, 200) + '...';\n    }\n    let clazz = 'randomchar__img';\n    thumbnail = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif' ? 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' : thumbnail;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') clazz = 'randomchar__not_img';\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={clazz}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef, useCallback} from 'react';\nimport PropTypes from 'prop-types'\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [charList, setCharList] = useState([]),\n          [loading, setLoading] = useState(true),\n          [error, setError] = useState(false),\n          [newItemLoading, setNewItemLoading] = useState(false),\n          [offset, setOffset] = useState(210),\n          [charEnded, setCharEnded] = useState(false),\n          marvelService = new MarvelService();\n\n    useEffect(() => {\n        onRequest();\n    }, [])\n\n    useEffect(() => {\n        if(!charEnded && !newItemLoading) {\n            window.addEventListener('scroll', onScroll);\n        }\n\n        return () => window.removeEventListener('scroll', onScroll);\n    })\n\n    const onRequest = (offset) => { \n        onCharLoading(); \n        marvelService\n            .getAllCharacters(offset)\n            .then(onCharListLoaded)\n            .catch(onError)\n    }\n\n    const onScroll = useCallback(() => {\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight && !charEnded) {\n            onRequest(offset);\n        }\n    })\n\n    const onCharLoading = () => {\n        setNewItemLoading(true);\n    }\n\n    const onCharListLoaded = (newCharList) => { \n        let ended = false; \n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]); \n        setLoading(false); \n        setNewItemLoading(false); \n        setOffset(offset => offset + newCharList.length); \n        setCharEnded(ended); \n    }\n\n    const onError = () => {\n        setError(true);\n        setLoading(false);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            item.thumbnail = item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif' ? 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' : item.thumbnail;\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                className='char__item'\n                tabIndex={0}\n                ref={el => itemRefs.current[i] = el}\n                key={item.id}\n                onClick={() => {\n                    props.onSelectedChar(item.id);\n                    focusOnItem(i);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === ' ' || e.key === \"Enter\") {\n                        props.onSelectedChar(item.id);\n                        focusOnItem(i);\n                    }\n                }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList),\n          errorMessage = error ? <ErrorMessage/> : null,\n          spinner = loading ? <Spinner/> : null,\n          content = !(loading || error) ? items : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onSelectedChar: PropTypes.func\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null),\n          [loading, setLoading] = useState(false),\n          [error, setError] = useState(false),\n          marvelService = new MarvelService();\n\n    useEffect(() => {\n        updateChar();\n        \n        if (props.charId !== props.charId) {\n            updateChar();\n        }\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        onCharLoading();\n        marvelService\n            .getCharacter(charId)\n            .then(onCharLoaded)\n            .catch(onError)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n        setLoading(false);\n    }\n\n    const onCharLoading = () => {\n        setLoading(true);\n    }\n\n    const onError = () => {\n        setLoading(false);\n        setError(true);\n    }\n\n    \n    const skeleton = char || error || loading ? null : <Skeleton/>,\n          errorMessage = error ? <ErrorMessage/> : null,\n          spinner = loading ? <Spinner/> : null,\n          content = !(error || loading || !char) ? <View char={char}/> : null;\n              \n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, homepage, wiki, comics} = char;\n    let {thumbnail} = char;\n    let clazz = 'randomchar__img';\n    thumbnail = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif' ? 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' : thumbnail;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif') clazz = 'char__not_img';\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} className={clazz}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    // eslint-disable-next-line\n                    comics.map((item, i) => {\n                        if (i < 10) {\n                            return (\n                                <li className=\"char__comics-item\" key={i}>\n                                    <a href={item.resourceURI}>{item.name}</a>\n                                </li>\n                            );\n                        }\n                    })\n                }\n            </ul>\n        </>\n    );\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.b6739a8d.png\";","import { useState } from \"react\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst App = () => {\n    const [selectedChar, setChar] = useState( null);\n\n    const onSelectedChar = (id) => {\n        setChar(id);\n    }\n\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <ErrorBoundary>\n                    <RandomChar/>\n                </ErrorBoundary>\n                <div className=\"char__content\">\n                    <ErrorBoundary>\n                        <CharList onSelectedChar={onSelectedChar}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedChar}/>\n                    </ErrorBoundary>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\nimport './style/media.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}